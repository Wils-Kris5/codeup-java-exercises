Polymorphism
Polymorphism is a feature of inheritance
it allows us to treat objects of different subclasses that have the same superclass
   as if they were of the superclass type. 
 polyMorphic argument = superclass
 you can declare any of the subclasses


 sidenote: packages are classes that do related things, its to organize code 

 -- PRE-READING QUESTIONS
 What is an abstract class?
  a class that serves the same functionality as a super class but cant be instatiated
  Abstract class = abstract methods
  abstract methods = no body // method name, return type, params is how you define a abstract method

 What is an interface:
     a type of abstract class.
     follows rules{ methods can be either public or static//properties are public and static final//no static methods

 What can an abstract class do that an interface can’t?
     

 What can an interface do that an abstract class can’t?
     provides context data regarding  what the object does


 Does the idea of a bicycle match more closely with an abstract class or interface?



 Does the idea of “repairable” (being able to repair something) match more closely with an abstract class or interface?



 What other related examples of abstract classes and interfaces come to mind?

